# -*- coding: utf-8 -*-
"""Cloud Deployment Classifier.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15Yq9FXO-gSD1LWtwUW7rdUenmrog8HzC
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
df = pd.read_csv('/content/container_vm_sustainability_dataset.csv')
df.head()

X = df[['workload_type', 'cpu_cores', 'memory_gb', 'cpu_utilization', 'memory_utilization', 'storage_type']]
y = df['deployment_type']

# One-hot encode categorical features
X = pd.get_dummies(X, columns=['workload_type', 'storage_type'], drop_first=True)

for col in X.columns:
    if X[col].isnull().any():
        X[col] = X[col].fillna(X[col].mean())

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

conf_matrix = confusion_matrix(y_test, y_pred)
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=['Container','VM'], yticklabels=['Container','VM'])
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()

print(classification_report(y_test, y_pred, target_names=['Container', 'VM']))

